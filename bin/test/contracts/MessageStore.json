{
    "contractName": "MessageStore",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "getMessage",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "newMessage",
                    "type": "string"
                }
            ],
            "name": "setMessage",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMessage\",\"type\":\"string\"}],\"name\":\"setMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Code/github/ethereum/test/contracts/MessageStore.sol\":\"MessageStore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Code/github/ethereum/test/contracts/MessageStore.sol\":{\"keccak256\":\"0x37cd4f349359804598e18e60eeccd4d01c9c9e98bc6fd86021ea59a158ca3f1a\",\"license\":\"None\",\"urls\":[\"bzz-raw://e4f10ff15f35d912189bc4e7a391df9d4481233256de2e91aac79c5636897a86\",\"dweb:/ipfs/Qma43BSxx7V1UKHfELmp49EhJKh6GPB1cebWusJRh9Db85\"]},\"c:/Code/github/ethereum/test/contracts/Ownable.sol\":{\"keccak256\":\"0x32e1c3fe7b698733e36eb0b7e1591766c6d9f87173836557649c30218bfafa11\",\"license\":\"None\",\"urls\":[\"bzz-raw://85bcb8136a3c013c72d1f0efbb64bf4367a73708f80d0e6b4c6681f7cd55e87d\",\"dweb:/ipfs/QmUwyiUEv2NSRHRjdCVkSFdsxWgQk9QgPaSE8GjYntaGgL\"]}},\"version\":1}",
    "bytecode": "608060405234801561001057600080fd5b5060008054336001600160a01b031991821681178355600180549092161790556102f690819061004090396000f3fe6080604052600436106100295760003560e01c8063368b87721461002e578063ce6d41de146100d6575b600080fd5b6100d46004803603602081101561004457600080fd5b81019060208101813564010000000081111561005f57600080fd5b82018360208201111561007157600080fd5b8035906020019184600183028401116401000000008311171561009357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610160945050505050565b005b3480156100e257600080fd5b506100eb61018c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012557818101518382015260200161010d565b50505050905090810190601f1680156101525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6729a2241af62c000034101561017557600080fd5b805161018890600290602084019061021f565b5050565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156102155780601f106101ea57610100808354040283529160200191610215565b820191906000526020600020905b8154815290600101906020018083116101f857829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610255576000855561029b565b82601f1061026e57805160ff191683800117855561029b565b8280016001018555821561029b579182015b8281111561029b578251825591602001919060010190610280565b506102a79291506102ab565b5090565b5b808211156102a757600081556001016102ac56fea26469706673582212207a6252da4620a4dcd5fe4af48dfe00857d569dd50a9edd056f663676125e198d64736f6c63430007050033",
    "deployedBytecode": "6080604052600436106100295760003560e01c8063368b87721461002e578063ce6d41de146100d6575b600080fd5b6100d46004803603602081101561004457600080fd5b81019060208101813564010000000081111561005f57600080fd5b82018360208201111561007157600080fd5b8035906020019184600183028401116401000000008311171561009357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610160945050505050565b005b3480156100e257600080fd5b506100eb61018c565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012557818101518382015260200161010d565b50505050905090810190601f1680156101525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6729a2241af62c000034101561017557600080fd5b805161018890600290602084019061021f565b5050565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156102155780601f106101ea57610100808354040283529160200191610215565b820191906000526020600020905b8154815290600101906020018083116101f857829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610255576000855561029b565b82601f1061026e57805160ff191683800117855561029b565b8280016001018555821561029b579182015b8281111561029b578251825591602001919060010190610280565b506102a79291506102ab565b5090565b5b808211156102a757600081556001016102ac56fea26469706673582212207a6252da4620a4dcd5fe4af48dfe00857d569dd50a9edd056f663676125e198d64736f6c63430007050033",
    "sourceMap": "96:429:0:-:0;;;204:51;;;;;;;;;-1:-1:-1;152:5:1;:18;;160:10;-1:-1:-1;;;;;;152:18:1;;;;;;;-1:-1:-1;229:18:0;;;;;;;;96:429;;;;;;;;",
    "deployedSourceMap": "96:429:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;268:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;268:140:0;;-1:-1:-1;268:140:0;;-1:-1:-1;;;;;268:140:0:i;:::-;;426:90;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;268:140;361:7;348:9;:20;;340:29;;;;;;380:20;;;;:7;;:20;;;;;:::i;:::-;;268:140;:::o;426:90::-;501:7;494:14;;;;;;;-1:-1:-1;;494:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:13;;494:14;;501:7;;494:14;;501:7;494:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:90;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;",
    "sourcePath": "c:/Code/github/ethereum/test/contracts/MessageStore.sol",
    "compiler": {
        "name": "solc",
        "version": "0.7.5+commit.eb77ed08"
    },
    "ast": {
        "absolutePath": "c:/Code/github/ethereum/test/contracts/MessageStore.sol",
        "exportedSymbols": {
            "MessageStore": [
                43
            ],
            "Ownable": [
                68
            ]
        },
        "id": 44,
        "license": "None",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    ">=",
                    "0.7",
                    ".0",
                    "<",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "34:31:0"
            },
            {
                "absolutePath": "c:/Code/github/ethereum/test/contracts/Ownable.sol",
                "file": "./Ownable.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 44,
                "sourceUnit": 69,
                "src": "69:23:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 3,
                            "name": "Ownable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 68,
                            "src": "121:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Ownable_$68",
                                "typeString": "contract Ownable"
                            }
                        },
                        "id": 4,
                        "nodeType": "InheritanceSpecifier",
                        "src": "121:7:0"
                    }
                ],
                "contractDependencies": [
                    68
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 43,
                "linearizedBaseContracts": [
                    43,
                    68
                ],
                "name": "MessageStore",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 6,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 43,
                        "src": "141:21:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 5,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "141:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "constant": false,
                        "id": 8,
                        "mutability": "mutable",
                        "name": "message",
                        "nodeType": "VariableDeclaration",
                        "scope": 43,
                        "src": "169:22:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 7,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "169:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "visibility": "private"
                    },
                    {
                        "body": {
                            "id": 16,
                            "nodeType": "Block",
                            "src": "218:37:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 14,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 11,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6,
                                            "src": "229:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 12,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "237:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 13,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "237:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                            }
                                        },
                                        "src": "229:18:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 15,
                                    "nodeType": "ExpressionStatement",
                                    "src": "229:18:0"
                                }
                            ]
                        },
                        "id": 17,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 9,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "215:2:0"
                        },
                        "returnParameters": {
                            "id": 10,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "218:0:0"
                        },
                        "scope": 43,
                        "src": "204:51:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 33,
                            "nodeType": "Block",
                            "src": "329:79:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 26,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 23,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -15,
                                                        "src": "348:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 24,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "348:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "hexValue": "33",
                                                    "id": 25,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "361:7:0",
                                                    "subdenomination": "ether",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_3000000000000000000_by_1",
                                                        "typeString": "int_const 3000000000000000000"
                                                    },
                                                    "value": "3"
                                                },
                                                "src": "348:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 22,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "340:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 27,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "340:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 28,
                                    "nodeType": "ExpressionStatement",
                                    "src": "340:29:0"
                                },
                                {
                                    "expression": {
                                        "id": 31,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 29,
                                            "name": "message",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8,
                                            "src": "380:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 30,
                                            "name": "newMessage",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 19,
                                            "src": "390:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                            }
                                        },
                                        "src": "380:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 32,
                                    "nodeType": "ExpressionStatement",
                                    "src": "380:20:0"
                                }
                            ]
                        },
                        "functionSelector": "368b8772",
                        "id": 34,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "setMessage",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 20,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 19,
                                    "mutability": "mutable",
                                    "name": "newMessage",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 34,
                                    "src": "288:24:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 18,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "288:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "287:26:0"
                        },
                        "returnParameters": {
                            "id": 21,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "329:0:0"
                        },
                        "scope": 43,
                        "src": "268:140:0",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 41,
                            "nodeType": "Block",
                            "src": "483:33:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 39,
                                        "name": "message",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8,
                                        "src": "501:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "functionReturnParameters": 38,
                                    "id": 40,
                                    "nodeType": "Return",
                                    "src": "494:14:0"
                                }
                            ]
                        },
                        "functionSelector": "ce6d41de",
                        "id": 42,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getMessage",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 35,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "445:2:0"
                        },
                        "returnParameters": {
                            "id": 38,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 37,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 42,
                                    "src": "468:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 36,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "468:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "467:15:0"
                        },
                        "scope": 43,
                        "src": "426:90:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 44,
                "src": "96:429:0"
            }
        ],
        "src": "34:493:0"
    },
    "functionHashes": {
        "getMessage()": "ce6d41de",
        "setMessage(string)": "368b8772"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "151600",
            "executionCost": "41867",
            "totalCost": "193467"
        },
        "external": {
            "getMessage()": "infinite",
            "setMessage(string)": "infinite"
        }
    }
}