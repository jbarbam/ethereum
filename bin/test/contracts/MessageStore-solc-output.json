{
    "contracts": {
        "c:/Code/github/ethereum/test/contracts/MessageStore.sol": {
            "MessageStore": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "getBalance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getBalanceInEther",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getMessage",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "newMessage",
                                "type": "string"
                            }
                        ],
                        "name": "setMessage",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transfer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610407806100326000396000f3fe60806040526004361061004a5760003560e01c806312065fe01461004f57806312514bba14610076578063359c09b5146100a2578063368b8772146100b7578063ce6d41de1461015d575b600080fd5b34801561005b57600080fd5b506100646101e7565b60408051918252519081900360200190f35b34801561008257600080fd5b506100a06004803603602081101561009957600080fd5b50356101eb565b005b3480156100ae57600080fd5b50610064610253565b6100a0600480360360208110156100cd57600080fd5b8101906020810181356401000000008111156100e857600080fd5b8201836020820111156100fa57600080fd5b8035906020019184600183028401116401000000008311171561011c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610273945050505050565b34801561016957600080fd5b5061017261029b565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ac578181015183820152602001610194565b50505050905090810190601f1680156101d95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b4790565b6000546001600160a01b0316331461020257600080fd5b8061020b6101e7565b101561021657600080fd5b600080546040516001600160a01b039091169183156108fc02918491818181858888f1935050505015801561024f573d6000803e3d6000fd5b5050565b6000670de0b6b3a76400006102666101e7565b8161026d57fe5b04905090565b6729a2241af62c000034101561028857600080fd5b805161024f906001906020840190610330565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156103265780601f106102fb57610100808354040283529160200191610326565b820191906000526020600020905b81548152906001019060200180831161030957829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261036657600085556103ac565b82601f1061037f57805160ff19168380011785556103ac565b828001600101855582156103ac579182015b828111156103ac578251825591602001919060010190610391565b506103b89291506103bc565b5090565b5b808211156103b857600081556001016103bd56fea26469706673582212206b035b3d7804266280c861cd0a411f6ccabadc4ee81d63bd4bad3b0e5bdcd82f64736f6c63430007050033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x407 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x12514BBA EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x359C09B5 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x368B8772 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xCE6D41DE EQ PUSH2 0x15D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x253 JUMP JUMPDEST PUSH2 0xA0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x273 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x194 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x20B PUSH2 0x1E7 JUMP JUMPDEST LT ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x266 PUSH2 0x1E7 JUMP JUMPDEST DUP2 PUSH2 0x26D JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0x29A2241AF62C0000 CALLVALUE LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x330 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 DUP8 DUP10 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x326 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x326 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x309 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x366 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3AC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x37F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3AC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3AC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3AC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x391 JUMP JUMPDEST POP PUSH2 0x3B8 SWAP3 SWAP2 POP PUSH2 0x3BC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3BD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x35B3D7804266280C861CD0A COINBASE 0x1F PUSH13 0xCABADC4EE81D63BD4BAD3B0E5B 0xDC 0xD8 0x2F PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
                        "sourceMap": "96:686:0:-:0;;;;;;;;;;;;-1:-1:-1;161:5:1;:18;;-1:-1:-1;;;;;;161:18:1;169:10;161:18;;;96:686:0;;;;;;"
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "60806040526004361061004a5760003560e01c806312065fe01461004f57806312514bba14610076578063359c09b5146100a2578063368b8772146100b7578063ce6d41de1461015d575b600080fd5b34801561005b57600080fd5b506100646101e7565b60408051918252519081900360200190f35b34801561008257600080fd5b506100a06004803603602081101561009957600080fd5b50356101eb565b005b3480156100ae57600080fd5b50610064610253565b6100a0600480360360208110156100cd57600080fd5b8101906020810181356401000000008111156100e857600080fd5b8201836020820111156100fa57600080fd5b8035906020019184600183028401116401000000008311171561011c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610273945050505050565b34801561016957600080fd5b5061017261029b565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ac578181015183820152602001610194565b50505050905090810190601f1680156101d95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b4790565b6000546001600160a01b0316331461020257600080fd5b8061020b6101e7565b101561021657600080fd5b600080546040516001600160a01b039091169183156108fc02918491818181858888f1935050505015801561024f573d6000803e3d6000fd5b5050565b6000670de0b6b3a76400006102666101e7565b8161026d57fe5b04905090565b6729a2241af62c000034101561028857600080fd5b805161024f906001906020840190610330565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156103265780601f106102fb57610100808354040283529160200191610326565b820191906000526020600020905b81548152906001019060200180831161030957829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261036657600085556103ac565b82601f1061037f57805160ff19168380011785556103ac565b828001600101855582156103ac579182015b828111156103ac578251825591602001919060010190610391565b506103b89291506103bc565b5090565b5b808211156103b857600081556001016103bd56fea26469706673582212206b035b3d7804266280c861cd0a411f6ccabadc4ee81d63bd4bad3b0e5bdcd82f64736f6c63430007050033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x12514BBA EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x359C09B5 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x368B8772 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xCE6D41DE EQ PUSH2 0x15D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x253 JUMP JUMPDEST PUSH2 0xA0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x273 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x194 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1D9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x20B PUSH2 0x1E7 JUMP JUMPDEST LT ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x266 PUSH2 0x1E7 JUMP JUMPDEST DUP2 PUSH2 0x26D JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP1 JUMP JUMPDEST PUSH8 0x29A2241AF62C0000 CALLVALUE LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x330 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 DUP8 DUP10 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x326 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x326 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x309 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x366 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3AC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x37F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3AC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3AC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3AC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x391 JUMP JUMPDEST POP PUSH2 0x3B8 SWAP3 SWAP2 POP PUSH2 0x3BC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3BD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x35B3D7804266280C861CD0A COINBASE 0x1F PUSH13 0xCABADC4EE81D63BD4BAD3B0E5B 0xDC 0xD8 0x2F PUSH5 0x736F6C6343 STOP SMOD SDIV STOP CALLER ",
                        "sourceMap": "96:686:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:96;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;650:129;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;650:129:0;;:::i;:::-;;538:100;;;;;;;;;;;;;:::i;176:140::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;176:140:0;;-1:-1:-1;176:140:0;;-1:-1:-1;;;;;176:140:0:i;328:90::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:96;497:21;430:96;:::o;650:129::-;236:5:1;;-1:-1:-1;;;;;236:5:1;245:10;236:19;228:28;;;;;;731:6:0::1;715:12;:10;:12::i;:::-;:22;;707:31;;;::::0;::::1;;749:5;::::0;;:22:::1;::::0;-1:-1:-1;;;;;749:5:0;;::::1;::::0;:22;::::1;;;::::0;764:6;;749:22;:5;:22;764:6;749:5;:22;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;650:129:::0;:::o;538:100::-;587:4;626;611:12;:10;:12::i;:::-;:19;;;;;;604:26;;538:100;:::o;176:140::-;269:7;256:9;:20;;248:29;;;;;;288:20;;;;:7;;:20;;;;;:::i;328:90::-;403:7;396:14;;;;;;;;-1:-1:-1;;396:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;370:13;;396:14;;403:7;;396:14;;403:7;396:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;328:90;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "206200",
                            "executionCost": "21086",
                            "totalCost": "227286"
                        },
                        "external": {
                            "getBalance()": "178",
                            "getBalanceInEther()": "282",
                            "getMessage()": "infinite",
                            "setMessage(string)": "infinite",
                            "transfer(uint256)": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "getBalance()": "12065fe0",
                        "getBalanceInEther()": "359c09b5",
                        "getMessage()": "ce6d41de",
                        "setMessage(string)": "368b8772",
                        "transfer(uint256)": "12514bba"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalanceInEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMessage\",\"type\":\"string\"}],\"name\":\"setMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Code/github/ethereum/test/contracts/MessageStore.sol\":\"MessageStore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Code/github/ethereum/test/contracts/MessageStore.sol\":{\"keccak256\":\"0x11fababd5360cc832c7be1a16a5fffcc2097718d7ee05a7c0be6c46bf8c44ab3\",\"license\":\"None\",\"urls\":[\"bzz-raw://7937220c8df03c9f6c81fe1cf8bc7906483f28f52e7b833c426fbd527bfec894\",\"dweb:/ipfs/QmPZ8BjZcfa5jMS2DbepcZvws6Dwsz2VixyFbfFQdL1joe\"]},\"c:/Code/github/ethereum/test/contracts/Ownable.sol\":{\"keccak256\":\"0x15c0ee9787dd73eedda8107edb85e2515f623493618b0e6bd9e309623e99feab\",\"license\":\"None\",\"urls\":[\"bzz-raw://1cc5e96c18ee555f83c3ca54c6590c98107665b6bcd34379a13ac0e213524a4c\",\"dweb:/ipfs/QmWMLLJuxnjKrPWAkiKw6kFzjs1UYCpP41mUWE8i23t7Kd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        },
        "c:/Code/github/ethereum/test/contracts/Ownable.sol": {
            "Ownable": {
                "abi": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "6080604052348015600f57600080fd5b50600080546001600160a01b03191633179055603f80602f6000396000f3fe6080604052600080fdfea264697066735822122087c25dfda6d420866a0d34e1b07b828e6bee96e3c39c70da037852b46f9f9f1864736f6c63430007050033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x3F DUP1 PUSH1 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xC2 0x5D REVERT 0xA6 0xD4 KECCAK256 DUP7 PUSH11 0xD34E1B07B828E6BEE96E3 0xC3 SWAP13 PUSH17 0xDA037852B46F9F9F1864736F6C63430007 SDIV STOP CALLER ",
                        "sourceMap": "69:213:1:-:0;;;136:51;;;;;;;;;-1:-1:-1;161:5:1;:18;;-1:-1:-1;;;;;;161:18:1;169:10;161:18;;;69:213;;;;;;"
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "6080604052600080fdfea264697066735822122087c25dfda6d420866a0d34e1b07b828e6bee96e3c39c70da037852b46f9f9f1864736f6c63430007050033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xC2 0x5D REVERT 0xA6 0xD4 KECCAK256 DUP7 PUSH11 0xD34E1B07B828E6BEE96E3 0xC3 SWAP13 PUSH17 0xDA037852B46F9F9F1864736F6C63430007 SDIV STOP CALLER ",
                        "sourceMap": "69:213:1:-:0;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "12600",
                            "executionCost": "20901",
                            "totalCost": "33501"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Code/github/ethereum/test/contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Code/github/ethereum/test/contracts/Ownable.sol\":{\"keccak256\":\"0x15c0ee9787dd73eedda8107edb85e2515f623493618b0e6bd9e309623e99feab\",\"license\":\"None\",\"urls\":[\"bzz-raw://1cc5e96c18ee555f83c3ca54c6590c98107665b6bcd34379a13ac0e213524a4c\",\"dweb:/ipfs/QmWMLLJuxnjKrPWAkiKw6kFzjs1UYCpP41mUWE8i23t7Kd\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "version": 1
                }
            }
        }
    },
    "sources": {
        "c:/Code/github/ethereum/test/contracts/MessageStore.sol": {
            "ast": {
                "absolutePath": "c:/Code/github/ethereum/test/contracts/MessageStore.sol",
                "exportedSymbols": {
                    "MessageStore": [
                        76
                    ],
                    "Ownable": [
                        101
                    ]
                },
                "id": 77,
                "license": "None",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7",
                            ".0",
                            "<",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "34:31:0"
                    },
                    {
                        "absolutePath": "c:/Code/github/ethereum/test/contracts/Ownable.sol",
                        "file": "./Ownable.sol",
                        "id": 2,
                        "nodeType": "ImportDirective",
                        "scope": 77,
                        "sourceUnit": 102,
                        "src": "69:23:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 3,
                                    "name": "Ownable",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 101,
                                    "src": "121:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Ownable_$101",
                                        "typeString": "contract Ownable"
                                    }
                                },
                                "id": 4,
                                "nodeType": "InheritanceSpecifier",
                                "src": "121:7:0"
                            }
                        ],
                        "contractDependencies": [
                            101
                        ],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 76,
                        "linearizedBaseContracts": [
                            76,
                            101
                        ],
                        "name": "MessageStore",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "id": 6,
                                "mutability": "mutable",
                                "name": "message",
                                "nodeType": "VariableDeclaration",
                                "scope": 76,
                                "src": "141:22:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 5,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "141:6:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "private"
                            },
                            {
                                "body": {
                                    "id": 22,
                                    "nodeType": "Block",
                                    "src": "237:79:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 15,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 12,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -15,
                                                                "src": "256:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 13,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "value",
                                                            "nodeType": "MemberAccess",
                                                            "src": "256:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">=",
                                                        "rightExpression": {
                                                            "hexValue": "33",
                                                            "id": 14,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "269:7:0",
                                                            "subdenomination": "ether",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_3000000000000000000_by_1",
                                                                "typeString": "int_const 3000000000000000000"
                                                            },
                                                            "value": "3"
                                                        },
                                                        "src": "256:20:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 11,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "248:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 16,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "248:29:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 17,
                                            "nodeType": "ExpressionStatement",
                                            "src": "248:29:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 20,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 18,
                                                    "name": "message",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 6,
                                                    "src": "288:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_storage",
                                                        "typeString": "string storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 19,
                                                    "name": "newMessage",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 8,
                                                    "src": "298:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                    }
                                                },
                                                "src": "288:20:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage",
                                                    "typeString": "string storage ref"
                                                }
                                            },
                                            "id": 21,
                                            "nodeType": "ExpressionStatement",
                                            "src": "288:20:0"
                                        }
                                    ]
                                },
                                "functionSelector": "368b8772",
                                "id": 23,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "setMessage",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 9,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 8,
                                            "mutability": "mutable",
                                            "name": "newMessage",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 23,
                                            "src": "196:24:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 7,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "196:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "195:26:0"
                                },
                                "returnParameters": {
                                    "id": 10,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "237:0:0"
                                },
                                "scope": 76,
                                "src": "176:140:0",
                                "stateMutability": "payable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 30,
                                    "nodeType": "Block",
                                    "src": "385:33:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 28,
                                                "name": "message",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 6,
                                                "src": "403:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage",
                                                    "typeString": "string storage ref"
                                                }
                                            },
                                            "functionReturnParameters": 27,
                                            "id": 29,
                                            "nodeType": "Return",
                                            "src": "396:14:0"
                                        }
                                    ]
                                },
                                "functionSelector": "ce6d41de",
                                "id": 31,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getMessage",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 24,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "347:2:0"
                                },
                                "returnParameters": {
                                    "id": 27,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 26,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 31,
                                            "src": "370:13:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 25,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "370:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "369:15:0"
                                },
                                "scope": 76,
                                "src": "328:90:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 42,
                                    "nodeType": "Block",
                                    "src": "479:47:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "id": 38,
                                                            "name": "this",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -28,
                                                            "src": "505:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_MessageStore_$76",
                                                                "typeString": "contract MessageStore"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_MessageStore_$76",
                                                                "typeString": "contract MessageStore"
                                                            }
                                                        ],
                                                        "id": 37,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "497:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 36,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "497:7:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 39,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "497:13:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "id": 40,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "balance",
                                                "nodeType": "MemberAccess",
                                                "src": "497:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 35,
                                            "id": 41,
                                            "nodeType": "Return",
                                            "src": "490:28:0"
                                        }
                                    ]
                                },
                                "functionSelector": "12065fe0",
                                "id": 43,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getBalance",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 32,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "449:2:0"
                                },
                                "returnParameters": {
                                    "id": 35,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 34,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 43,
                                            "src": "473:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 33,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "473:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "472:6:0"
                                },
                                "scope": 76,
                                "src": "430:96:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 53,
                                    "nodeType": "Block",
                                    "src": "593:45:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 51,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 48,
                                                        "name": "getBalance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 43,
                                                        "src": "611:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                            "typeString": "function () view returns (uint256)"
                                                        }
                                                    },
                                                    "id": 49,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "611:12:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "/",
                                                "rightExpression": {
                                                    "hexValue": "31653138",
                                                    "id": 50,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "626:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                        "typeString": "int_const 1000000000000000000"
                                                    },
                                                    "value": "1e18"
                                                },
                                                "src": "611:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "functionReturnParameters": 47,
                                            "id": 52,
                                            "nodeType": "Return",
                                            "src": "604:26:0"
                                        }
                                    ]
                                },
                                "functionSelector": "359c09b5",
                                "id": 54,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getBalanceInEther",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 44,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "564:2:0"
                                },
                                "returnParameters": {
                                    "id": 47,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 46,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 54,
                                            "src": "587:4:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 45,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "587:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "586:6:0"
                                },
                                "scope": 76,
                                "src": "538:100:0",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 74,
                                    "nodeType": "Block",
                                    "src": "696:83:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 65,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 62,
                                                                "name": "getBalance",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 43,
                                                                "src": "715:10:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                    "typeString": "function () view returns (uint256)"
                                                                }
                                                            },
                                                            "id": 63,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "715:12:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">=",
                                                        "rightExpression": {
                                                            "id": 64,
                                                            "name": "amount",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 56,
                                                            "src": "731:6:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "715:22:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 61,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "707:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 66,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "707:31:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 67,
                                            "nodeType": "ExpressionStatement",
                                            "src": "707:31:0"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 71,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 56,
                                                        "src": "764:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 68,
                                                        "name": "owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 80,
                                                        "src": "749:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    "id": 70,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "transfer",
                                                    "nodeType": "MemberAccess",
                                                    "src": "749:14:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                        "typeString": "function (uint256)"
                                                    }
                                                },
                                                "id": 72,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "749:22:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 73,
                                            "nodeType": "ExpressionStatement",
                                            "src": "749:22:0"
                                        }
                                    ]
                                },
                                "functionSelector": "12514bba",
                                "id": 75,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 59,
                                        "modifierName": {
                                            "id": 58,
                                            "name": "isOwner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 100,
                                            "src": "688:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "688:7:0"
                                    }
                                ],
                                "name": "transfer",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 57,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 56,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 75,
                                            "src": "668:11:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 55,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "668:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "667:13:0"
                                },
                                "returnParameters": {
                                    "id": 60,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "696:0:0"
                                },
                                "scope": 76,
                                "src": "650:129:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            }
                        ],
                        "scope": 77,
                        "src": "96:686:0"
                    }
                ],
                "src": "34:750:0"
            },
            "id": 0
        },
        "c:/Code/github/ethereum/test/contracts/Ownable.sol": {
            "ast": {
                "absolutePath": "c:/Code/github/ethereum/test/contracts/Ownable.sol",
                "exportedSymbols": {
                    "Ownable": [
                        101
                    ]
                },
                "id": 102,
                "license": "None",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 78,
                        "literals": [
                            "solidity",
                            ">=",
                            "0.7",
                            ".0",
                            "<",
                            "0.8",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "34:31:1"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 101,
                        "linearizedBaseContracts": [
                            101
                        ],
                        "name": "Ownable",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "id": 80,
                                "mutability": "mutable",
                                "name": "owner",
                                "nodeType": "VariableDeclaration",
                                "scope": 101,
                                "src": "96:30:1",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                },
                                "typeName": {
                                    "id": 79,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "96:15:1",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 88,
                                    "nodeType": "Block",
                                    "src": "150:37:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 86,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 83,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 80,
                                                    "src": "161:5:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "expression": {
                                                        "id": 84,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -15,
                                                        "src": "169:3:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 85,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "169:10:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "161:18:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 87,
                                            "nodeType": "ExpressionStatement",
                                            "src": "161:18:1"
                                        }
                                    ]
                                },
                                "id": 89,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 81,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "147:2:1"
                                },
                                "returnParameters": {
                                    "id": 82,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "150:0:1"
                                },
                                "scope": 101,
                                "src": "136:51:1",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 99,
                                    "nodeType": "Block",
                                    "src": "217:59:1",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        "id": 95,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 92,
                                                            "name": "owner",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 80,
                                                            "src": "236:5:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 93,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -15,
                                                                "src": "245:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 94,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "245:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "236:19:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 91,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "228:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 96,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "228:28:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 97,
                                            "nodeType": "ExpressionStatement",
                                            "src": "228:28:1"
                                        },
                                        {
                                            "id": 98,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "267:1:1"
                                        }
                                    ]
                                },
                                "id": 100,
                                "name": "isOwner",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 90,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "215:2:1"
                                },
                                "src": "199:77:1",
                                "virtual": false,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 102,
                        "src": "69:213:1"
                    }
                ],
                "src": "34:248:1"
            },
            "id": 1
        }
    }
}